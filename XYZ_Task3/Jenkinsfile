pipeline {
    agent {
        label 'agent193'
    }
    
    environment {
        DOCKER_REGISTRY = 'docker.io'
        NAMESPACE = 'xyz-tech'
        APP_NAME = 'xyztechnologies'
        // Assuming your Docker Hub username is 'demsdocker'
        DOCKER_USERNAME = 'demsdocker' 
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            tools {
                maven 'maven' // Use Maven tool if configured in Jenkins
            }
            steps {
                script {
                    sh 'mvn clean install -Dmaven.test.skip=true'
                }
            }
            post {
                success {
                    archiveArtifacts artifacts: '**/target/*.war', fingerprint: true
                }
            }
        }

        stage('Build and Push Docker Image') {
            steps {
                script {
                    // Define the image name
                    def imageName = "${env.DOCKER_USERNAME}/${env.APP_NAME}"
                    def dockerImage = docker.build(imageName, "-f Dockerfile .")
                    
                    // Use the credential ID string directly and fix the URL typo
                    docker.withRegistry("https://${env.DOCKER_REGISTRY}", 'dockerhub_credentials') {
                        dockerImage.push("latest")
                    }
                    echo "Successfully built and uploaded to DockerHub"
                }
            }
        } 

        // This stage is optional if your goal is only K8s deployment
        stage('Run Docker container locally') {
            steps {
                script {
                    sh 'ansible-playbook ansible/ansibleDocCont.yml --connection=local'
                    echo "Successfully pulled from DockerHub and started container locally"
                }
            }
        }

        // Uncomment this stage to enable Kubernetes deployment
        // stage('Deploy to Kubernetes') {
        //     steps {
        //         script {
        //             sh 'ansible-playbook ansible/ansibleK8s.yml --connection=local'
        //             echo "Successfully deployed application to Kubernetes cluster"
        //         }
        //     }
        // }
    }
}
